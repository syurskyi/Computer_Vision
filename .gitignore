# Created by .ignore support plugin (hsz.mobi)
### .gitignore template
# Created by .ignore support plugin (hsz.mobi)

# Created by .ignore support plugin (hsz.mobi)
.idea/
.idea/vcs.xml
rebrand-subs/
captions/
page_*.jpeg
exercises/
Subtitles
documents/
.env/
logs.txt
data.db
*.key
*.indd
*.png
.DS_Store
.vscode/
__pycache__/
*.scriv
*.pyc
*.screenflow
*.mp4
*.mov
*.cmproj
exports/
videos/
*.numbers
*.sketch

venv/
/.gitignore
### Example user template template
### Example user template

# IntelliJ project files
.idea
*.iml
out
gen
### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

/Master Computer Vision OpenCV4 in Python with Deep Learning/10. Computational Photography & Make a License Plate Reader/images/
/Master Computer Vision OpenCV4 in Python with Deep Learning/16. BONUS  Build a Cats vs Dogs Classifier/datasets/
/Master Computer Vision OpenCV4 in Python with Deep Learning/17. BONUS - Build a Credit Card Number Reader/26. Credit Card/
/Master Computer Vision OpenCV4 in Python with Deep Learning/17. BONUS - Build a Credit Card Number Reader/Credit-Card Number Identification/
/Master Computer Vision OpenCV4 in Python with Deep Learning/18. BONUS - Neural Style Transfer with OpenCV/art/
/Master Computer Vision OpenCV4 in Python with Deep Learning/18. BONUS - Neural Style Transfer with OpenCV/models/
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/MobileNetSSD_deploy.caffemodel
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/frozen_inference_graph.pb
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/model.ckpt.data-00000-of-00001
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/ssd_mobilenet_v1_coco.pbtxt
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/model.ckpt.index
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/graph.pbtxt
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/MobileNetSSD_deploy.prototxt
/Master Computer Vision OpenCV4 in Python with Deep Learning/19. BONUS - Object Detection - Use SSDs (Single Shot Detector) for Detecting Objects/model.ckpt.meta
/Master Computer Vision OpenCV4 in Python with Deep Learning/20. BONUS - Colorize Black and White Images/blackandwhite/
/Master Computer Vision OpenCV4 in Python with Deep Learning/20. BONUS - Colorize Black and White Images/colorization_deploy_v2.prototxt
/Master Computer Vision OpenCV4 in Python with Deep Learning/20. BONUS - Colorize Black and White Images/pts_in_hull.npy
/Master Computer Vision OpenCV4 in Python with Deep Learning/20. BONUS - Colorize Black and White Images/colorization_release_v2.caffemodel
/Computer Vision with OpenCV 4/Section 1/images/
/Computer Vision with OpenCV 4/Section 2/images/
/Computer Vision with OpenCV 4/Section 3/images/
/Computer Vision with OpenCV 4/Section 3/Haarcascades/
/Computer Vision with OpenCV 4/Section 4/images/
/Computer Vision with OpenCV 4/Section 4/mnist_simple_cnn_10_Epochs.h5
/Computer Vision with OpenCV 4/Section 5/group_of_faces/
/Computer Vision with OpenCV 4/Section 5/friends/
/Computer Vision with OpenCV 4/Section 5/friends_faces/
/Computer Vision with OpenCV 4/Section 5/handgestures/
/Computer Vision with OpenCV 4/Section 5/sign_mnist_test/
/Computer Vision with OpenCV 4/Section 5/people/
/Computer Vision with OpenCV 4/Section 5/training_faces/
/Computer Vision with OpenCV 4/Section 5/Haarcascades/
/Computer Vision with OpenCV 4/Section 5/sign_mnist_train/
/Computer Vision with OpenCV 4/Section 5/Friends.mp4
/Computer Vision with OpenCV 4/Section 5/my_gestures_cnn.h5
/Computer Vision with OpenCV 4/Section 6/art/
/Computer Vision with OpenCV 4/Section 6/images/
/Computer Vision with OpenCV 4/Section 6/models/
/Computer Vision with OpenCV 4/Section 6/ssd_mobilenet_v1_coco.pbtxt
/Computer Vision with OpenCV 4/Section 6/frozen_inference_graph.pb
/Master Computer Vision OpenCV4 in Python with Deep Learning/faces/
/Master Computer Vision OpenCV4 in Python with Deep Learning/Haarcascades/
/Master Computer Vision OpenCV4 in Python with Deep Learning/images/
/Master Computer Vision OpenCV4 in Python with Deep Learning/shape_predictor_68_face_landmarks.dat
